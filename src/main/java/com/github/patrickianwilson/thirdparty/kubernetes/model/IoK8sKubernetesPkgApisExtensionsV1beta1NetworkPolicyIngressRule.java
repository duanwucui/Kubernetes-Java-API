/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.patrickianwilson.thirdparty.kubernetes.model;

import java.util.Objects;
import com.github.patrickianwilson.thirdparty.kubernetes.model.IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer;
import com.github.patrickianwilson.thirdparty.kubernetes.model.IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.
 */
@ApiModel(description = "This NetworkPolicyIngressRule matches traffic if and only if the traffic matches both ports AND from.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-17T08:08:12.703-08:00")
public class IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule {
  @SerializedName("from")
  private List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer> from = null;

  @SerializedName("ports")
  private List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort> ports = null;

  public IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule from(List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer> from) {
    this.from = from;
    return this;
  }

  public IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule addFromItem(IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer fromItem) {
    if (this.from == null) {
      this.from = new ArrayList<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer>();
    }
    this.from.add(fromItem);
    return this;
  }

   /**
   * List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.
   * @return from
  **/
  @ApiModelProperty(value = "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.")
  public List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer> getFrom() {
    return from;
  }

  public void setFrom(List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPeer> from) {
    this.from = from;
  }

  public IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule ports(List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort> ports) {
    this.ports = ports;
    return this;
  }

  public IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule addPortsItem(IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
   * @return ports
  **/
  @ApiModelProperty(value = "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.")
  public List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort> getPorts() {
    return ports;
  }

  public void setPorts(List<IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyPort> ports) {
    this.ports = ports;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule ioK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule = (IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule) o;
    return Objects.equals(this.from, ioK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule.from) &&
        Objects.equals(this.ports, ioK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule.ports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, ports);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoK8sKubernetesPkgApisExtensionsV1beta1NetworkPolicyIngressRule {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

