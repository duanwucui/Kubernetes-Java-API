/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.patrickianwilson.thirdparty.kubernetes.model;

import java.util.Objects;
import com.github.patrickianwilson.thirdparty.kubernetes.model.IoK8sKubernetesPkgApiV1NodeSelectorRequirement;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A null or empty node selector term matches no objects.
 */
@ApiModel(description = "A null or empty node selector term matches no objects.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-17T08:08:12.703-08:00")
public class IoK8sKubernetesPkgApiV1NodeSelectorTerm {
  @SerializedName("matchExpressions")
  private List<IoK8sKubernetesPkgApiV1NodeSelectorRequirement> matchExpressions = new ArrayList<IoK8sKubernetesPkgApiV1NodeSelectorRequirement>();

  public IoK8sKubernetesPkgApiV1NodeSelectorTerm matchExpressions(List<IoK8sKubernetesPkgApiV1NodeSelectorRequirement> matchExpressions) {
    this.matchExpressions = matchExpressions;
    return this;
  }

  public IoK8sKubernetesPkgApiV1NodeSelectorTerm addMatchExpressionsItem(IoK8sKubernetesPkgApiV1NodeSelectorRequirement matchExpressionsItem) {
    this.matchExpressions.add(matchExpressionsItem);
    return this;
  }

   /**
   * Required. A list of node selector requirements. The requirements are ANDed.
   * @return matchExpressions
  **/
  @ApiModelProperty(required = true, value = "Required. A list of node selector requirements. The requirements are ANDed.")
  public List<IoK8sKubernetesPkgApiV1NodeSelectorRequirement> getMatchExpressions() {
    return matchExpressions;
  }

  public void setMatchExpressions(List<IoK8sKubernetesPkgApiV1NodeSelectorRequirement> matchExpressions) {
    this.matchExpressions = matchExpressions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoK8sKubernetesPkgApiV1NodeSelectorTerm ioK8sKubernetesPkgApiV1NodeSelectorTerm = (IoK8sKubernetesPkgApiV1NodeSelectorTerm) o;
    return Objects.equals(this.matchExpressions, ioK8sKubernetesPkgApiV1NodeSelectorTerm.matchExpressions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchExpressions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoK8sKubernetesPkgApiV1NodeSelectorTerm {\n");
    
    sb.append("    matchExpressions: ").append(toIndentedString(matchExpressions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

